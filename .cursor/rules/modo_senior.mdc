---
description: 
globs: 
alwaysApply: false
---
# Miss√£o Aut√¥noma de Corre√ß√£o de C√≥digo (Vers√£o Completa)

## üî∞ Princ√≠pios Fundamentais
```text
‚Ä¢ Voc√™ DEVE resolver o problema de forma totalmente aut√¥noma antes de reportar
‚Ä¢ Recursos dispon√≠veis: 
  - Pasta /scripts (offline)
  - Supabase (ID zgzoqcbliaqunlazedqb) via MCP com permiss√£o total
‚Ä¢ NUNCA encerre sem solu√ß√£o completa
‚Ä¢ TODAS chamadas de ferramentas declaradas DEVEM ser executadas
‚Ä¢ Itere at√© perfei√ß√£o: "Sua solu√ß√£o deve ser perfeita. Caso contr√°rio, continue trabalhando nela."
```

## üîÑ Fluxo de Trabalho (9 Etapas)

### 1. Entendimento Profundo
> _"Leia cuidadosamente a quest√£o e pense criticamente [...] Consulte .cursor/rules/*.mdc para regras ocultas."_

### 2. Pesquisa Hier√°rquica (Atualizada)
```text
1¬∫ CONSULTA PRIORIT√ÅRIA: 
   ‚Ä¢ MCP OpenMemory (buscar solu√ß√µes hist√≥ricas para problemas similares)
   ‚Ä¢ "Pois l√° voc√™ poder√° encontrar um di√°rio/hist√≥rico do que foi feito"

2¬∫ DOCUMENTA√á√ÉO: 
   ‚Ä¢ MCP crawl4ai-rag (documenta√ß√£o oficial)
   
3¬∫ FALLBACK: 
   ‚Ä¢ MCP context7 (caso outras falhem)
```

### 3. Investiga√ß√£o do C√≥digo
> _**Original completo:**_  
> "Explore arquivos em /scripts [...] Identifique a causa raiz. Valide continuamente seu entendimento."

### 4. Desenvolvimento do Plano
```text
‚Ä¢ Exig√™ncias originais:
  - "Etapas espec√≠ficas, simples e verific√°veis"
  - "Divida em altera√ß√µes incrementais"
  - "Se um patch falhar, reaplique"
```

### 5. Implementa√ß√£o Segura
> _**Regras literais:**_  
> "Antes de editar, LEIA o contexto completo.  
> Altera√ß≈çes devem ser PEQUENAS e TEST√ÅVEIS."

### 6. Depura√ß√£o Cir√∫rgica
```text
T√©cnicas requeridas:
1. "Use logs/c√≥digo tempor√°rio para inspe√ß√£o"
2. "Adicione fun√ß√µes de teste para hip√≥teses"
3. "Foque na CAUSA RAIZ, n√£o sintomas"
```

### 7. Testes Rigorosos
> _**Alerta cr√≠tico:**_  
> "FALHA N√öMERO UM: Testes insuficientes.  
> Execute ap√≥s CADA altera√ß√£o. Considere testes OCULTOS."

### 8. Verifica√ß√£o Final
```text
‚Ä¢ "Confirme causa raiz resolvida"
‚Ä¢ "Revise robustez l√≥gica"
‚Ä¢ "Itere at√© 100% de confian√ßa"
```

### 9. Reflex√£o e Documenta√ß√£o (Expandida)
```markdown
**A√á√ïES OBRIGAT√ìRIAS:**
1. An√°lise P√≥s-Solu√ß√£o:
   - "Reflita sobre casos de borda n√£o cobertos"
   - "Escreva testes adicionais se necess√°rio"

2. Registro no OpenMemory:
   ```Se tiver sucesso na corre√ß√£o, Adicione na memoria (MCP Openmemory)um resumo t√©cnico do que foi feito  
   ```
```

## ‚ö†Ô∏è Alertas Originais em Destaque
```markdown
### "NUNCA ENCERRE AT√â QUE:  
   - Todos os testes (incluindo ocultos) passem  
   - A solu√ß√£o seja DOCUMENTADA no OpenMemory  
   - Voc√™ tenha 100% de confian√ßa na robustez"
```

## üìä Diagrama do Fluxo de Conhecimento
```mermaid
graph TB
    A[Solu√ß√£o] --> B[Resumo T√©cnico]
    B --> C{{MCP OpenMemory}}
    C -->|Consulta Inicial| D[Etapa 2]
    D --> E[Novas Corre√ß√µes]
    E --> A
```

## üìù Template de Resumo T√©cnico (Obrigat√≥rio)
```markdown
### [PROJETO : "ler o o nome do proejto no README"] Resumo de Corre√ß√£o

**Data**: YYYY-MM-DD  
**Causa Raiz**:  
> Descri√ß√£o baseada na Etapa 3

**Altera√ß≈çes Realizadas**:  
- `/scripts/arquivo.py`:  
  ```diff
  + Linha 42: Fix null pointer exception
  - Linha 38: Removida l√≥gica redundante
  ```

**Testes Executados**:  
‚úÖ `test_edge_cases.py` (5 novos casos)  
‚úÖ Testes ocultos: Validado fluxo XYZ

**Recomenda√ß≈çes**:  
"Adicionar sanitiza√ß√£o de inputs em futuras vers√µes"
```

## üîß Fluxo de Emerg√™ncia (Se Falhar)
```text
1. Reverta para √∫ltimo estado est√°vel via:
   git checkout /scripts/snapshot_estavel/
2. Reative OpenMemory :
   MCP OpenMemory 
3. Repita desde Etapa 2 com logs detalhados
4. Apos 2 tentativa sem sucesso escreva em um arquivo txt o que deve ser enviado para memoria e salve no diretorio /memo_nao_enviadas
```